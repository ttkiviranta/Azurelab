<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <title></title>
    <script type="text/javascript" src="../lib/jquery/dist/jquery.js"></script>
    <script src="../js/productview.js"></script>
    <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/v/dt/jq-3.3.1/dt-1.10.18/af-2.3.3/b-1.5.6/b-print-1.5.6/cr-1.5.0/fc-3.2.5/fh-3.1.4/kt-2.5.0/r-2.2.2/rg-1.1.0/rr-1.2.4/sc-2.0.0/sl-1.3.0/datatables.min.css" />
    <script type="text/javascript" src="https://cdn.datatables.net/v/dt/jq-3.3.1/dt-1.10.18/af-2.3.3/b-1.5.6/b-print-1.5.6/cr-1.5.0/fc-3.2.5/fh-3.1.4/kt-2.5.0/r-2.2.2/rg-1.1.0/rr-1.2.4/sc-2.0.0/sl-1.3.0/datatables.min.js"></script>
</head>

<body>
    @model Client.Models.ProductsViewModel.ProductsViewModel

    @{
        ViewData["Title"] = "Products";
    }

    @{
        if (TempData["CustomError"] != null)
        {
            <h2>@TempData["CustomError"]</h2>
        }
        else
        {
            <h2>Products</h2>
        }
        if (!Model.Products.Any())
        {
            <p>Products missing</p>
        }
    }
  
    <p>
        <a asp-action="Create">Create New</a>
    </p>

    <div>
        <h3>Show products with status:</h3>
        <input class="customRadioButton" id="All" type="radio" name="searchRadio" value="" checked="checked">All<br>
        <input class="customRadioButton" id="Online" type="radio" name="searchRadio" value="Online">Online<br>
        <input class="customRadioButton" id="Offline" type="radio" name="searchRadio" value="Offline">Offline<br>
        <br />
    </div>
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="row">
        <table id="products" class="display">
            <thead>
                <tr>
                    <th>
                        Product Name
                    </th>
                    <th>
                        Number
                    </th>
                    <th>
                        Price
                    </th>
                    <th>
                        Product Model
                    </th>
                    <th>
                        Subcategory
                    </th>
                    <th>
                        Status
                    </th>
                    <th>
                        Pending
                    </th>

                    <th></th>
                </tr>
            </thead>


            <tbody>

                @for (var i = 0; i < Model.Products.Count; i++)
                {

                    var iidd = Model.Products[i].ProductId + "_2";
                    <tr id="@iidd" class="">

                        <td>
                            @Html.DisplayFor(model => model.Products[i].Name)
                        </td>
                        <td>
                            @Html.DisplayFor(model => model.Products[i].ProductNumber)
                        </td>
                        <td>
                            @Html.DisplayFor(model => model.Products[i].ListPrice)
                        </td>


                        @if (@Model.Products[i].ProductModelId != null)
                        {

                            @for (var j = 0; j < Model.ProductModels.Count; j++)
                            {

                                if (@Model.Products[i].ProductModelId == @Model.ProductModels[j].ProductModelId)
                                {
                                    <td>
                                        @Html.DisplayFor(model => model.ProductModels[j].Name)
                                    </td>
                                }
                            }
                        }


                        @if (@Model.Products[i].ProductModelId == null)
                        {

                            <td>
                                @Html.DisplayFor(model => model.Products[i].ProductModelId)
                            </td>

                        }


                        @if (@Model.Products[i].ProductSubcategoryId != null)
                        {

                            @for (var j = 0; j < Model.ProductSubcategories.Count; j++)
                            {

                                if (@Model.Products[i].ProductSubcategoryId == @Model.ProductSubcategories[j].ProductSubcategoryId)
                                {
                                    <td>
                                        @Html.DisplayFor(model => model.ProductSubcategories[j].Name)
                                    </td>
                                }
                            }
                        }

                        @if (@Model.Products[i].ProductSubcategoryId == null)
                        {

                            <td>
                                @Html.DisplayFor(model => model.Products[i].ProductSubcategoryId)
                            </td>

                        }

                        @{ var cl = Model.Products[i].Online ? "" : "alert-danger";}
                        <td class="@cl">
                            @Html.DisplayFor(model => model.Products[i].OnlineOrOffline)
                        </td>
                        <td>
                            @Html.DisplayFor(model => model.Products[i].Pending)
                        </td>
                        <td>
                            @if (String.IsNullOrEmpty(@Model.Products[i].Pending) || @Model.Products[i].Pending == "Update" || @Model.Products[i].Pending == "Create")
                            {
                                <a href="/Products/Edit/@Model.Products[i].ProductId">Edit</a> @Html.Raw("|")
                                <a href="/Products/Details/@Model.Products[i].ProductId">Details</a> @Html.Raw("|")
                                <a href="/Products/Delete/@Model.Products[i].ProductId">Delete</a>
                            }
                            else
                            {
                                @Html.Raw("Edit | Details | Delete");
                            }
                        </td>

                    </tr>
                }
            </tbody>
        </table>
    </div>



    <script type="text/javascript">
     /*   $.fn.dataTable.ext.search.push(
            function (settings, data, dataIndex) {
                var filter = this.value;
                var min = parseInt($('#min').val(), 10);
                var max = parseInt($('#max').val(), 10);
                var age = parseFloat(data[3]) || 0; // use data for the age column

                if ((isNaN(min) && isNaN(max)) ||
                    (isNaN(min) && age <= max) ||
                    (min <= age && isNaN(max)) ||
                    (min <= age && age <= max)) {
                    return true;
                }
                return false;
            }
        );*/

        jQuery(document).ready(function ($) {

            var table = $('#products').DataTable();
           
            //Event Listener for custom radio buttons to filter datatable

        /*    table.rows().every(function () {
                var d = this.data();

                d.counter++; // update data source for the row

                this.invalidate(); // invalidate the data DataTables has cached for this row
            });*/

            // Draw once all updates are done
            table.draw();

            $('#products tbody').on('click', 'tr', function () {
                var d = table.row(this).data();

                d.counter++;

                table
                    .row(this)
                    .data(d)
                    .draw();
            });


            $('.customRadioButton').change(function () {
                table.destroy();
                table = $('#products').DataTable();
                table.columns(5).search(this.value).draw();
            });
        });
    </script>
</body>
</html>

